name: release

permissions:
  contents: read
  pages: write
  id-token: write
  attestations: write

on:
  push:
    branches: [main]
    paths:
      - docker/Dockerfile
  pull_request:
    branches: [main]
    paths:
      - docker/Dockerfile
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request' || github.actor != 'renovate[bot]'
    strategy:
      matrix:
        inputs:
          - dockerfile: Dockerfile
            variant: linuxserver-release
          - dockerfile: Dockerfile
            variant: linuxserver-testing
          - dockerfile: Dockerfile
            variant: linuxserver-nightly
          - dockerfile: Dockerfile
            variant: linuxserver-plugins
          - dockerfile: Dockerfile
            variant: hotio-release
          - dockerfile: Dockerfile
            variant: hotio-testing
          - dockerfile: Dockerfile
            variant: hotio-nightly
          - dockerfile: Dockerfile
            variant: hotio-plugins
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract version
        id: extract
        run: |
          tag=$(awk -v "v=${{ matrix.inputs.variant }}" '$1 == "FROM" && $4 == v { split($2, t, ":"); print(t[2]) }' "docker/${{ matrix.inputs.dockerfile }}")
          version=$(printf '%s\n' "${tag##*-}")
          printf 'Extracted version: %s\n' "${version:?}"
          printf 'version=%s\n' "${version:?}" >> "${GITHUB_OUTPUT:?}"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: blampe
          password: ${{ secrets.DOCKERHUB_PAT }}

      - name: Configure metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: blampe/lidarr
          tags: |
            type=raw,value=${{ steps.extract.outputs.version }}-${{ matrix.inputs.variant }}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push Docker image
        id: build
        uses: docker/build-push-action@v6
        with:
          context: docker/
          file: docker/${{ matrix.inputs.dockerfile }}
          build-args: |
            LIDARR_VARIANT=${{ matrix.inputs.variant }}
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        if: github.event_name != 'pull_request'
        with:
          subject-name: index.docker.io/blampe/lidarr
          subject-digest: ${{ steps.build.outputs.digest }}
          push-to-registry: true
